# tmux 1.8 required for this feature, which removes "gaps" in window numbering:
set-option -g renumber-windows on

# Set tmux prefix key to ctrl-a like in screen:
unbind C-b
set -g prefix C-a

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Common config:
set -g history-limit 100000
set -g default-terminal "screen-256color"
setw -g utf8 on
set-window-option -g xterm-keys on
setw -g automatic-rename on
set -s escape-time 0
setw -g monitor-activity on

# Make interactive apps behave:
set -sg escape-time 0

# Update terminal window title:
set-option -g set-titles on
set-option -g set-titles-string 'tmux: #W #T' # tmux: window-name username@hostname

# Start window indexing at one instead of zero:
set -g base-index 1

# Make scroolwheel act like we expect (output over command history)
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides 'screen*:smcup@:rmcup@'

# Turn off annoying mouse features:
setw -g mode-mouse off
set-option -g mouse-select-pane off
set-option -g mouse-resize-pane off
set-option -g mouse-select-window off

# Audible bell only:
set-option -g bell-action any
set-option -g visual-bell off

# Downsize window size if on a laptop:
setw -g aggressive-resize on

# Binds:
# My most favorite keybinds ever:
bind-key -n C-right select-window -t :+   # Next Window  
bind-key -n C-left select-window -t :-    # Previous Window

# Smart pane switching with awareness of vim splits:
# from: http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# Dependency: Bundle 'christoomey/vim-tmux-navigator'
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Easy pane resizing:
bind C-Left resize-pane -L 20
bind C-Down resize-pane -D 5
bind C-Up resize-pane -U 5
bind C-Right resize-pane -R 20

# Maximize current pane:
unbind =
bind = new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
bind - last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

# Faster window navigation with ctrl-left and ctrl-right:
bind -n C-left prev
bind -n C-right next

# Faster window rearrangement with shift-left and shift-right:
bind -n S-left swap-window -t -1
bind -n S-right swap-window -t +1

# Quick pane cycling with ctrl-a ctrl-a:
unbind ^A
bind ^A select-pane -t :.+

# Quick ssh window:
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# Alternate key bindings for horizontal and vertical panes:
bind | split-window -h
bind - split-window -v

# Reload tmux config with ctrl-r:
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Copy & Paste Support in OSX:
# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Gray status bar with load and time:
set status on
set -g status-utf8 on
set -g status-justify centre
set -g status-bg '#2e2e2e'
set -g status-fg '#ffffff'
set -g status-fg white
set -g status-left '#[fg=green,bg=#4e4e4e] #(whoami)#[fg=white]@#[fg=cyan,bright]#h #[default]'
set -g status-left-length 30
set-option -g status-interval 60
set -g status-right '#[bg=#bbbbbb]#[fg=#000000] #(cut -d " " -f -3 /proc/loadavg) #[bg=#4e4e4e]#[fg=colour47] %b%e %I:%M%p #[default]'
set -g window-status-format ' #I:#W '

# Special colors for active window:
set -g window-status-current-format '#[bg=#55ff55] #[fg=red,bright]>#[fg=black,bright]#W#[fg=red,bright]< #[default]'

# Pane border colors
set -g pane-active-border-fg '#bbbbbb'
set -g pane-border-fg '#555555'
